buildscript {
  repositories {
    mavenCentral()
  }
}

buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
  }
}

plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.10'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
  id 'jacoco'
}

group = 'i0.sealights.synth'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

project.ext["codeCoverageManagerVersion"] = System.getProperty('codeCoverageManagerVersion') == null ? 'v1' : System.getProperty('codeCoverageManagerVersion')
project.ext["enableOtelExtension"] = 'false'
project.ext["anonymousExecution"] = System.getProperty('anonymousExecution') == null ? 'false' : System.getProperty('anonymousExecution')

if (System.getProperty('parallelRun') != null) {
  project.ext["enableOtelExtension"] = 'true'
}

repositories {
  mavenCentral()
}

dependencies {

  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'com.esotericsoftware:reflectasm:1.11.9'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
  implementation 'org.json:json:20230227'


  testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

tasks.named('test') {
  useJUnitPlatform()

//  systemProperty 'generatorPackageName', System.getProperty('testRunId') ? System.getProperty('testRunId') : null

}